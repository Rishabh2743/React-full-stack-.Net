import "./chunk-UXIASGQL.js";

// node_modules/get-problem-details/dist/index.js
var dist_default = getProblemDetails;
function getType(result) {
  if (!!result && typeof result === "object" && "type" in result && typeof result.type === "string") {
    return result.type;
  }
  return void 0;
}
function getTitle(result, errorMessage = "Server Error") {
  if (!!result && typeof result === "object") {
    if ("title" in result && typeof result.title === "string") {
      return result.title;
    }
    if ("statusText" in result && typeof result.statusText === "string") {
      return result.statusText;
    }
  }
  return errorMessage;
}
function getStatus(result) {
  if (!!result && typeof result === "object" && "status" in result && typeof result.status === "number") {
    return result.status;
  }
  return 500;
}
function getDetail(result) {
  if (!!result && typeof result === "object" && "detail" in result && typeof result.detail === "string") {
    return result.detail;
  }
  return void 0;
}
function getTraceId(result) {
  if (!!result && typeof result === "object" && "traceId" in result && typeof result.traceId === "string") {
    return result.traceId;
  }
  return void 0;
}
function getInstance(result) {
  if (!!result && typeof result === "object" && "instance" in result && typeof result.instance === "string") {
    return result.instance;
  }
  return void 0;
}
function getErrors(result) {
  if (!!result && typeof result === "object" && "errors" in result && typeof result.errors === "object" && result.errors !== null) {
    return result.errors;
  }
  return void 0;
}
function getProblemDetails(responseResult, errorMessage) {
  return {
    type: getType(responseResult),
    title: getTitle(responseResult, errorMessage),
    status: getStatus(responseResult),
    detail: getDetail(responseResult),
    traceId: getTraceId(responseResult),
    instance: getInstance(responseResult),
    errors: getErrors(responseResult)
  };
}
export {
  dist_default as default
};
//# sourceMappingURL=get-problem-details.js.map
