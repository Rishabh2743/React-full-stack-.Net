{
  "version": 3,
  "sources": ["../../get-problem-details/dist/index.js"],
  "sourcesContent": ["export default getProblemDetails;\n/**\n * Gets the type property string of a fetch response if there is one.\n * @param result from a response.\n * @return problem detail's type string information, else undefined if response/problem-details contains no property.\n */\nfunction getType(result) {\n    if (!!result && typeof result === \"object\" && \"type\" in result && typeof result.type === \"string\") {\n        return result.type;\n    }\n    return undefined;\n}\n/**\n * Gets the title property string of a fetch response if there is one. Can be passed with an error message if\n * an error occurred while fetching.\n * @param result from a response.\n * @param errorMessage If an error message occurred while fetching. Defaults to \"Server Error\" if no error message is passed.\n * @return string of problem detail's title information, defaults to \"Server Error\" if response/problem-details/errorMessage contains no property.\n */\nfunction getTitle(result, errorMessage = \"Server Error\") {\n    if (!!result && typeof result === \"object\") {\n        if (\"title\" in result && typeof result.title === \"string\") {\n            return result.title;\n        }\n        // If the response only returns a string with failed status code.\n        if (\"statusText\" in result && typeof result.statusText === \"string\") {\n            return result.statusText;\n        }\n    }\n    // Default to the error message or to Server Error.\n    return errorMessage;\n}\n/**\n * Gets the status property number of a fetch response if there is one.\n * @param result from a response.\n * @return number of problem detail's status code , else returns a default of 500 status code if no status code\n * was found.\n */\nfunction getStatus(result) {\n    if (!!result && typeof result === \"object\" && \"status\" in result && typeof result.status === \"number\") {\n        return result.status;\n    }\n    // Default to a server error.\n    return 500;\n}\n/**\n * Gets the detail property string of a response, if there is one.\n * @param result from a response.\n * @return string of problem detail's detail information, else undefined if response/problem-details contains no property.\n */\nfunction getDetail(result) {\n    if (!!result && typeof result === \"object\" && \"detail\" in result && typeof result.detail === \"string\") {\n        return result.detail;\n    }\n    return undefined;\n}\n/**\n * Gets the traceId property string of a fetch response if there is one.\n * @param result from a response.\n * @return string of problem detail's traceId information, else undefined if response/problem-details contains no property.\n */\nfunction getTraceId(result) {\n    if (!!result && typeof result === \"object\" && \"traceId\" in result && typeof result.traceId === \"string\") {\n        return result.traceId;\n    }\n    return undefined;\n}\n/**\n * Gets the instance property string of a fetch response if there is one.\n * @param result from a response.\n * @return string of problem detail's instance information, else undefined if response/problem-details contains no property.\n */\nfunction getInstance(result) {\n    if (!!result && typeof result === \"object\" && \"instance\" in result && typeof result.instance === \"string\") {\n        return result.instance;\n    }\n    return undefined;\n}\n// TODO: Implement custom problem details extensions\n/**\n * Gets the errors property object of a fetch response if there is one.\n * @param result from a fetch response.\n * @return record object of the problem detail's errors record, else undefined if response/problem-details contains no property.\n */\nfunction getErrors(result) {\n    if (!!result\n        && typeof result === \"object\"\n        && \"errors\" in result\n        && typeof result.errors === \"object\"\n        && result.errors !== null) {\n        return result.errors;\n    }\n    return undefined;\n}\n/**\n * Gets a ProblemDetails object from an unsuccessful response from a fetch. Attempts to extract the\n * properties of a problem details response result if there is one.\n * @param responseResult the response object from an unsuccessful. Must be json parse first before calling this function.\n * @param errorMessage optional error message string to pass to be set in title if no title is found in the response result.\n * @return ProblemDetails object containing the problem details property from a response, or the defaults: {status=500, title = \"Server Error\"},\n * if no problem details properties were found.\n */\nfunction getProblemDetails(responseResult, errorMessage) {\n    return {\n        type: getType(responseResult),\n        title: getTitle(responseResult, errorMessage),\n        status: getStatus(responseResult),\n        detail: getDetail(responseResult),\n        traceId: getTraceId(responseResult),\n        instance: getInstance(responseResult),\n        errors: getErrors(responseResult)\n    };\n}\n"],
  "mappings": ";;;AAAA,IAAO,eAAQ;AAMf,SAAS,QAAQ,QAAQ;AACrB,MAAI,CAAC,CAAC,UAAU,OAAO,WAAW,YAAY,UAAU,UAAU,OAAO,OAAO,SAAS,UAAU;AAC/F,WAAO,OAAO;AAAA,EAClB;AACA,SAAO;AACX;AAQA,SAAS,SAAS,QAAQ,eAAe,gBAAgB;AACrD,MAAI,CAAC,CAAC,UAAU,OAAO,WAAW,UAAU;AACxC,QAAI,WAAW,UAAU,OAAO,OAAO,UAAU,UAAU;AACvD,aAAO,OAAO;AAAA,IAClB;AAEA,QAAI,gBAAgB,UAAU,OAAO,OAAO,eAAe,UAAU;AACjE,aAAO,OAAO;AAAA,IAClB;AAAA,EACJ;AAEA,SAAO;AACX;AAOA,SAAS,UAAU,QAAQ;AACvB,MAAI,CAAC,CAAC,UAAU,OAAO,WAAW,YAAY,YAAY,UAAU,OAAO,OAAO,WAAW,UAAU;AACnG,WAAO,OAAO;AAAA,EAClB;AAEA,SAAO;AACX;AAMA,SAAS,UAAU,QAAQ;AACvB,MAAI,CAAC,CAAC,UAAU,OAAO,WAAW,YAAY,YAAY,UAAU,OAAO,OAAO,WAAW,UAAU;AACnG,WAAO,OAAO;AAAA,EAClB;AACA,SAAO;AACX;AAMA,SAAS,WAAW,QAAQ;AACxB,MAAI,CAAC,CAAC,UAAU,OAAO,WAAW,YAAY,aAAa,UAAU,OAAO,OAAO,YAAY,UAAU;AACrG,WAAO,OAAO;AAAA,EAClB;AACA,SAAO;AACX;AAMA,SAAS,YAAY,QAAQ;AACzB,MAAI,CAAC,CAAC,UAAU,OAAO,WAAW,YAAY,cAAc,UAAU,OAAO,OAAO,aAAa,UAAU;AACvG,WAAO,OAAO;AAAA,EAClB;AACA,SAAO;AACX;AAOA,SAAS,UAAU,QAAQ;AACvB,MAAI,CAAC,CAAC,UACC,OAAO,WAAW,YAClB,YAAY,UACZ,OAAO,OAAO,WAAW,YACzB,OAAO,WAAW,MAAM;AAC3B,WAAO,OAAO;AAAA,EAClB;AACA,SAAO;AACX;AASA,SAAS,kBAAkB,gBAAgB,cAAc;AACrD,SAAO;AAAA,IACH,MAAM,QAAQ,cAAc;AAAA,IAC5B,OAAO,SAAS,gBAAgB,YAAY;AAAA,IAC5C,QAAQ,UAAU,cAAc;AAAA,IAChC,QAAQ,UAAU,cAAc;AAAA,IAChC,SAAS,WAAW,cAAc;AAAA,IAClC,UAAU,YAAY,cAAc;AAAA,IACpC,QAAQ,UAAU,cAAc;AAAA,EACpC;AACJ;",
  "names": []
}
